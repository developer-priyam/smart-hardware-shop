{"ast":null,"code":"import { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n\nfunction SearchBarComponent_mat_optgroup_7_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const name_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", name_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", name_r4, \" \");\n  }\n}\n\nfunction SearchBarComponent_mat_optgroup_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 5);\n    i0.ɵɵtemplate(1, SearchBarComponent_mat_optgroup_7_mat_option_1_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r2.letter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r2.names);\n  }\n}\n\nexport const _filter = (opt, value) => {\n  const filterValue = value.toLowerCase();\n  return opt.filter(item => item.toLowerCase().includes(filterValue));\n};\nexport class SearchBarComponent {\n  constructor(_formBuilder) {\n    this._formBuilder = _formBuilder;\n    this.stateForm = this._formBuilder.group({\n      stateGroup: ''\n    });\n    this.stateGroups = [{\n      letter: 'A',\n      names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\n    }, {\n      letter: 'C',\n      names: ['California', 'Colorado', 'Connecticut']\n    }, {\n      letter: 'D',\n      names: ['Delaware']\n    }, {\n      letter: 'F',\n      names: ['Florida']\n    }, {\n      letter: 'G',\n      names: ['Georgia']\n    }, {\n      letter: 'H',\n      names: ['Hawaii']\n    }, {\n      letter: 'I',\n      names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\n    }, {\n      letter: 'K',\n      names: ['Kansas', 'Kentucky']\n    }, {\n      letter: 'L',\n      names: ['Louisiana']\n    }, {\n      letter: 'M',\n      names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana']\n    }, {\n      letter: 'N',\n      names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota']\n    }, {\n      letter: 'O',\n      names: ['Ohio', 'Oklahoma', 'Oregon']\n    }, {\n      letter: 'P',\n      names: ['Pennsylvania']\n    }, {\n      letter: 'R',\n      names: ['Rhode Island']\n    }, {\n      letter: 'S',\n      names: ['South Carolina', 'South Dakota']\n    }, {\n      letter: 'T',\n      names: ['Tennessee', 'Texas']\n    }, {\n      letter: 'U',\n      names: ['Utah']\n    }, {\n      letter: 'V',\n      names: ['Vermont', 'Virginia']\n    }, {\n      letter: 'W',\n      names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n    }];\n  }\n\n  ngOnInit() {\n    this.stateGroupOptions = this.stateForm.get('stateGroup').valueChanges.pipe(startWith(''), map(value => this._filterGroup(value)));\n  }\n\n  _filterGroup(value) {\n    if (value) {\n      return this.stateGroups.map(group => ({\n        letter: group.letter,\n        names: _filter(group.names, value)\n      })).filter(group => group.names.length > 0);\n    }\n\n    return this.stateGroups;\n  }\n\n}\n\nSearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) {\n  return new (t || SearchBarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n\nSearchBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchBarComponent,\n  selectors: [[\"app-search-bar\"]],\n  decls: 9,\n  vars: 5,\n  consts: [[3, \"formGroup\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"stateGroup\", \"required\", \"\", 3, \"matAutocomplete\"], [\"autoGroup\", \"matAutocomplete\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function SearchBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n      i0.ɵɵtext(3, \"States Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(7, SearchBarComponent_mat_optgroup_7_Template, 2, 2, \"mat-optgroup\", 4);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      i0.ɵɵproperty(\"formGroup\", ctx.stateForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 3, ctx.stateGroupOptions));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWFyY2gtYmFyLmNvbXBvbmVudC5jc3MifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"sources":["/Users/priyambhatnagar/personal/smart-hardware-shop/ui/src/app/shared/search-bar/search-bar.component.ts"],"names":["startWith","map","i0","i1","SearchBarComponent_mat_optgroup_7_mat_option_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","name_r4","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","SearchBarComponent_mat_optgroup_7_Template","ɵɵtemplate","group_r2","letter","names","_filter","opt","value","filterValue","toLowerCase","filter","item","includes","SearchBarComponent","constructor","_formBuilder","stateForm","group","stateGroup","stateGroups","ngOnInit","stateGroupOptions","get","valueChanges","pipe","_filterGroup","length","ɵfac","SearchBarComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","SearchBarComponent_Template","ɵɵelement","ɵɵpipe","_r0","ɵɵreference","ɵɵpipeBind1","styles","changeDetection"],"mappings":"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","sourcesContent":["import { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction SearchBarComponent_mat_optgroup_7_mat_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const name_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", name_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", name_r4, \" \");\n} }\nfunction SearchBarComponent_mat_optgroup_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 5);\n    i0.ɵɵtemplate(1, SearchBarComponent_mat_optgroup_7_mat_option_1_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r2.letter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r2.names);\n} }\nexport const _filter = (opt, value) => {\n    const filterValue = value.toLowerCase();\n    return opt.filter(item => item.toLowerCase().includes(filterValue));\n};\nexport class SearchBarComponent {\n    constructor(_formBuilder) {\n        this._formBuilder = _formBuilder;\n        this.stateForm = this._formBuilder.group({\n            stateGroup: '',\n        });\n        this.stateGroups = [\n            {\n                letter: 'A',\n                names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas'],\n            },\n            {\n                letter: 'C',\n                names: ['California', 'Colorado', 'Connecticut'],\n            },\n            {\n                letter: 'D',\n                names: ['Delaware'],\n            },\n            {\n                letter: 'F',\n                names: ['Florida'],\n            },\n            {\n                letter: 'G',\n                names: ['Georgia'],\n            },\n            {\n                letter: 'H',\n                names: ['Hawaii'],\n            },\n            {\n                letter: 'I',\n                names: ['Idaho', 'Illinois', 'Indiana', 'Iowa'],\n            },\n            {\n                letter: 'K',\n                names: ['Kansas', 'Kentucky'],\n            },\n            {\n                letter: 'L',\n                names: ['Louisiana'],\n            },\n            {\n                letter: 'M',\n                names: [\n                    'Maine',\n                    'Maryland',\n                    'Massachusetts',\n                    'Michigan',\n                    'Minnesota',\n                    'Mississippi',\n                    'Missouri',\n                    'Montana',\n                ],\n            },\n            {\n                letter: 'N',\n                names: [\n                    'Nebraska',\n                    'Nevada',\n                    'New Hampshire',\n                    'New Jersey',\n                    'New Mexico',\n                    'New York',\n                    'North Carolina',\n                    'North Dakota',\n                ],\n            },\n            {\n                letter: 'O',\n                names: ['Ohio', 'Oklahoma', 'Oregon'],\n            },\n            {\n                letter: 'P',\n                names: ['Pennsylvania'],\n            },\n            {\n                letter: 'R',\n                names: ['Rhode Island'],\n            },\n            {\n                letter: 'S',\n                names: ['South Carolina', 'South Dakota'],\n            },\n            {\n                letter: 'T',\n                names: ['Tennessee', 'Texas'],\n            },\n            {\n                letter: 'U',\n                names: ['Utah'],\n            },\n            {\n                letter: 'V',\n                names: ['Vermont', 'Virginia'],\n            },\n            {\n                letter: 'W',\n                names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming'],\n            },\n        ];\n    }\n    ngOnInit() {\n        this.stateGroupOptions = this.stateForm.get('stateGroup').valueChanges.pipe(startWith(''), map(value => this._filterGroup(value)));\n    }\n    _filterGroup(value) {\n        if (value) {\n            return this.stateGroups\n                .map(group => ({ letter: group.letter, names: _filter(group.names, value) }))\n                .filter(group => group.names.length > 0);\n        }\n        return this.stateGroups;\n    }\n}\nSearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) { return new (t || SearchBarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder)); };\nSearchBarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SearchBarComponent, selectors: [[\"app-search-bar\"]], decls: 9, vars: 5, consts: [[3, \"formGroup\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"stateGroup\", \"required\", \"\", 3, \"matAutocomplete\"], [\"autoGroup\", \"matAutocomplete\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SearchBarComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"States Group\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n        i0.ɵɵtemplate(7, SearchBarComponent_mat_optgroup_7_Template, 2, 2, \"mat-optgroup\", 4);\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.stateForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 3, ctx.stateGroupOptions));\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWFyY2gtYmFyLmNvbXBvbmVudC5jc3MifQ== */\"], changeDetection: 0 });\n"]},"metadata":{},"sourceType":"module"}